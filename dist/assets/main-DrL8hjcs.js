(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(r){if(r.ep)return;r.ep=!0;const n=t(r);fetch(r.href,n)}})();class c{constructor(){this.events=new Map}static getInstance(){return c.instance||(c.instance=new c),c.instance}on(e,t){this.events.has(e)||this.events.set(e,[]),this.events.get(e).push(t)}off(e,t){const s=this.events.get(e);if(s){const r=s.indexOf(t);r>-1&&s.splice(r,1)}}emit(e,t){const s=this.events.get(e);s&&s.forEach(r=>{try{r(t)}catch(n){console.error(`Error in event callback for ${e}:`,n)}})}clear(){this.events.clear()}}class l{constructor(){this.storageKey="archers-scorecard"}static getInstance(){return l.instance||(l.instance=new l),l.instance}async save(e,t){try{if(!this.isStorageAvailable())return{success:!1,error:new Error("localStorage is not available")};const s=`${this.storageKey}.${e}`,r=JSON.stringify(t);return localStorage.setItem(s,r),{success:!0,data:void 0}}catch(s){return{success:!1,error:s}}}async load(e){try{if(!this.isStorageAvailable())return{success:!1,error:new Error("localStorage is not available")};const t=`${this.storageKey}.${e}`,s=localStorage.getItem(t);return s===null?{success:!0,data:null}:{success:!0,data:JSON.parse(s)}}catch(t){return{success:!1,error:t}}}async delete(e){try{if(!this.isStorageAvailable())return{success:!1,error:new Error("localStorage is not available")};const t=`${this.storageKey}.${e}`;return localStorage.removeItem(t),{success:!0,data:void 0}}catch(t){return{success:!1,error:t}}}async clear(){try{if(!this.isStorageAvailable())return{success:!1,error:new Error("localStorage is not available")};const e=[];for(let t=0;t<localStorage.length;t++){const s=localStorage.key(t);s&&s.startsWith(this.storageKey)&&e.push(s)}return e.forEach(t=>localStorage.removeItem(t)),{success:!0,data:void 0}}catch(e){return{success:!1,error:e}}}async exists(e){try{if(!this.isStorageAvailable())return!1;const t=`${this.storageKey}.${e}`;return localStorage.getItem(t)!==null}catch{return!1}}isStorageAvailable(){try{const e="__storage_test__";return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch{return!1}}getStorageInfo(){if(!this.isStorageAvailable())return{used:0,available:0,percentage:0};let e=0;for(let r=0;r<localStorage.length;r++){const n=localStorage.key(r);if(n&&n.startsWith(this.storageKey)){const a=localStorage.getItem(n);a&&(e+=n.length+a.length)}}const t=5*1024*1024,s=e/t*100;return{used:e,available:t-e,percentage:Math.min(s,100)}}}const u={size:122,rings:[{value:10,innerRadius:0,outerRadius:6.1,color:"#FFD700"},{value:9,innerRadius:6.1,outerRadius:12.2,color:"#FFD700"},{value:8,innerRadius:12.2,outerRadius:18.3,color:"#FF0000"},{value:7,innerRadius:18.3,outerRadius:24.4,color:"#FF0000"},{value:6,innerRadius:24.4,outerRadius:30.5,color:"#0000FF"},{value:5,innerRadius:30.5,outerRadius:36.6,color:"#0000FF"},{value:4,innerRadius:36.6,outerRadius:42.7,color:"#000000"},{value:3,innerRadius:42.7,outerRadius:48.8,color:"#000000"},{value:2,innerRadius:48.8,outerRadius:54.9,color:"#FFFFFF"},{value:1,innerRadius:54.9,outerRadius:61,color:"#FFFFFF"}]},h={size:80,rings:[{value:10,innerRadius:0,outerRadius:4,color:"#FFD700"},{value:9,innerRadius:4,outerRadius:8,color:"#FFD700"},{value:8,innerRadius:8,outerRadius:12,color:"#FF0000"},{value:7,innerRadius:12,outerRadius:16,color:"#FF0000"},{value:6,innerRadius:16,outerRadius:20,color:"#0000FF"},{value:5,innerRadius:20,outerRadius:24,color:"#0000FF"},{value:4,innerRadius:24,outerRadius:28,color:"#000000"},{value:3,innerRadius:28,outerRadius:32,color:"#000000"},{value:2,innerRadius:32,outerRadius:36,color:"#FFFFFF"},{value:1,innerRadius:36,outerRadius:40,color:"#FFFFFF"}]},g={size:40,rings:[{value:10,innerRadius:0,outerRadius:2,color:"#FFD700"},{value:9,innerRadius:2,outerRadius:4,color:"#FFD700"},{value:8,innerRadius:4,outerRadius:6,color:"#FF0000"},{value:7,innerRadius:6,outerRadius:8,color:"#FF0000"},{value:6,innerRadius:8,outerRadius:10,color:"#0000FF"},{value:5,innerRadius:10,outerRadius:12,color:"#0000FF"},{value:4,innerRadius:12,outerRadius:14,color:"#000000"},{value:3,innerRadius:14,outerRadius:16,color:"#000000"},{value:2,innerRadius:16,outerRadius:18,color:"#FFFFFF"},{value:1,innerRadius:18,outerRadius:20,color:"#FFFFFF"}]},m=[{id:"70m-122cm",name:"70m Round",distance:70,targetFace:u,arrowsPerEnd:6,totalEnds:12,maxScore:720},{id:"60m-122cm",name:"60m Round",distance:60,targetFace:u,arrowsPerEnd:6,totalEnds:12,maxScore:720},{id:"50m-122cm",name:"50m Round",distance:50,targetFace:u,arrowsPerEnd:6,totalEnds:12,maxScore:720},{id:"30m-80cm",name:"30m Round",distance:30,targetFace:h,arrowsPerEnd:6,totalEnds:12,maxScore:720},{id:"18m-40cm",name:"18m Round",distance:18,targetFace:g,arrowsPerEnd:3,totalEnds:20,maxScore:600},{id:"practice-30m",name:"Practice 30m",distance:30,targetFace:h,arrowsPerEnd:3,totalEnds:10,maxScore:300},{id:"practice-18m",name:"Practice 18m",distance:18,targetFace:g,arrowsPerEnd:3,totalEnds:10,maxScore:300}];class v{static getAll(){return[...m]}static getById(e){return m.find(t=>t.id===e)}static getByDistance(e){return m.filter(t=>t.distance===e)}static getTargetFace(e){switch(e){case 122:return u;case 80:return h;case 40:return g;default:return}}static validateRoundType(e){return!!(e.id&&e.name&&e.distance&&e.targetFace&&e.arrowsPerEnd&&e.totalEnds&&e.maxScore)}static calculateMaxScore(e,t){return e*t*10}}class f{constructor(){this.eventBus=c.getInstance(),this.storageService=l.getInstance(),this.state={currentSession:null,sessions:[],currentView:"scoring",isLoading:!1,error:null}}async initialize(){try{this.state.isLoading=!0,await this.loadSessions(),this.initializeUI(),this.setupEventListeners(),this.state.isLoading=!1,console.log("Archers Scorecard initialized successfully")}catch(e){this.handleError(e)}}async loadSessions(){const e=await this.storageService.load("sessions");e.success&&e.data&&(this.state.sessions=e.data)}setupEventListeners(){document.getElementById("nav-scoring")?.addEventListener("click",()=>{this.switchView("scoring")}),document.getElementById("nav-history")?.addEventListener("click",()=>{this.switchView("history")}),document.getElementById("nav-settings")?.addEventListener("click",()=>{this.switchView("settings")});const e=document.getElementById("round-type"),t=document.getElementById("start-session");e?.addEventListener("change",()=>{t.disabled=!e.value}),t?.addEventListener("click",()=>{this.startNewSession(e.value)}),document.querySelectorAll(".score-input").forEach(s=>{s.addEventListener("input",this.handleScoreInput.bind(this)),s.addEventListener("blur",this.validateScoreInput.bind(this))}),document.getElementById("complete-end")?.addEventListener("click",()=>{this.completeCurrentEnd()}),document.getElementById("clear-end")?.addEventListener("click",()=>{this.clearCurrentEnd()})}initializeUI(){this.populateRoundTypes(),this.switchView("scoring"),this.updateUI()}populateRoundTypes(){const e=document.getElementById("round-type");if(e){for(;e.children.length>1;)e.removeChild(e.lastChild);v.getAll().forEach(t=>{const s=document.createElement("option");s.value=t.id,s.textContent=`${t.name} - ${t.distance}m`,e.appendChild(s)})}}switchView(e){const t=this.state.currentView;this.state.currentView=e,document.querySelectorAll(".nav-button").forEach(s=>{s.classList.remove("active")}),document.getElementById(`nav-${e}`)?.classList.add("active"),document.querySelectorAll(".view").forEach(s=>{s.classList.remove("active")}),document.getElementById(`${e}-view`)?.classList.add("active"),this.eventBus.emit("view-changed",{from:t,to:e}),e==="history"&&this.updateHistoryView()}startNewSession(e){const t=v.getById(e);if(!t){this.handleError(new Error("Invalid round type selected"));return}const s={id:this.generateSessionId(),roundType:t,startTime:new Date,ends:[],metadata:{},isComplete:!1};this.state.currentSession=s,this.showScoringInterface(),this.updateUI(),this.eventBus.emit("session-started",s)}showScoringInterface(){const e=document.querySelector(".round-selector"),t=document.getElementById("scoring-interface");e&&(e.style.display="none"),t&&(t.classList.remove("hidden"),t.style.display="block")}handleScoreInput(e){const t=e.target,s=t.value.toUpperCase();this.isValidScoreInput(s)||s===""?(t.classList.remove("invalid"),this.updateEndTotal()):t.classList.add("invalid")}validateScoreInput(e){const t=e.target,s=t.value.toUpperCase();s&&!this.isValidScoreInput(s)&&(t.value="",t.classList.remove("invalid"),this.showError("Invalid score. Use 1-10, X, or M"))}isValidScoreInput(e){if(e==="X"||e==="M")return!0;const t=parseInt(e);return!isNaN(t)&&t>=1&&t<=10}updateEndTotal(){const e=document.querySelectorAll(".score-input");let t=0,s=0;e.forEach(a=>{const i=a.value.toUpperCase();if(i)if(i==="X")t+=10,s++;else if(i==="M")s++;else{const o=parseInt(i);!isNaN(o)&&o>=1&&o<=10&&(t+=o,s++)}});const r=document.getElementById("end-total");r&&(r.textContent=t.toString());const n=document.getElementById("complete-end");n&&this.state.currentSession&&(n.disabled=s!==this.state.currentSession.roundType.arrowsPerEnd)}completeCurrentEnd(){if(!this.state.currentSession)return;const e=document.querySelectorAll(".score-input"),t=[];e.forEach(a=>{const i=a.value.toUpperCase();i&&t.push({value:i,isInnerTen:i==="X",timestamp:new Date})});const s=this.state.currentSession.ends.length+1,r=t.reduce((a,i)=>{if(i.value==="X")return a+10;if(i.value==="M")return a+0;const o=typeof i.value=="string"?parseInt(i.value):i.value;return a+(isNaN(o)?0:o)},0),n={number:s,arrows:t,timestamp:new Date,total:r};if(this.state.currentSession.ends.push(n),this.clearCurrentEnd(),this.updateUI(),this.saveCurrentSession(),s>=this.state.currentSession.roundType.totalEnds)this.completeSession();else{const a=document.getElementById("current-end-number");a&&(a.textContent=(s+1).toString())}this.eventBus.emit("end-completed",n)}clearCurrentEnd(){document.querySelectorAll(".score-input").forEach(r=>{r.value="",r.classList.remove("invalid")});const t=document.getElementById("end-total");t&&(t.textContent="0");const s=document.getElementById("complete-end");s&&(s.disabled=!0)}completeSession(){this.state.currentSession&&(this.state.currentSession.endTime=new Date,this.state.currentSession.isComplete=!0,this.state.sessions.push(this.state.currentSession),this.saveAllSessions(),this.state.currentSession=null,this.showSessionComplete(),this.eventBus.emit("session-ended",this.state.currentSession))}showSessionComplete(){const e=document.querySelector(".round-selector"),t=document.getElementById("scoring-interface");e&&(e.style.display="block"),t&&(t.classList.add("hidden"),t.style.display="none");const s=document.getElementById("round-type"),r=document.getElementById("start-session");s&&(s.value=""),r&&(r.disabled=!0),this.showSuccess("Session completed successfully!")}updateUI(){this.updateRunningTotal()}updateRunningTotal(){if(!this.state.currentSession)return;const e=this.state.currentSession.ends.reduce((s,r)=>s+r.total,0),t=document.getElementById("running-total");t&&(t.textContent=e.toString())}updateHistoryView(){const e=document.getElementById("session-list");if(!e)return;if(this.state.sessions.length===0){e.innerHTML="<p>No sessions recorded yet</p>";return}const t=this.state.sessions.sort((s,r)=>new Date(r.startTime).getTime()-new Date(s.startTime).getTime()).map(s=>{const r=s.ends.reduce((a,i)=>a+i.total,0),n=new Date(s.startTime).toLocaleDateString();return`
          <div class="session-item">
            <h3>${s.roundType.name}</h3>
            <p>Date: ${n}</p>
            <p>Score: ${r}/${s.roundType.maxScore}</p>
            <p>Ends: ${s.ends.length}/${s.roundType.totalEnds}</p>
          </div>
        `}).join("");e.innerHTML=t}async saveCurrentSession(){if(!this.state.currentSession)return;const e=await this.storageService.save("currentSession",this.state.currentSession);e.success||console.error("Failed to save current session:",e.error)}async saveAllSessions(){const e=await this.storageService.save("sessions",this.state.sessions);e.success||console.error("Failed to save sessions:",e.error)}generateSessionId(){return`session_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}handleError(e){console.error("Application error:",e),this.state.error=e.message,this.showError(e.message),this.eventBus.emit("error-occurred",e)}showError(e){alert(`Error: ${e}`)}showSuccess(e){alert(e)}}document.addEventListener("DOMContentLoaded",()=>{new f().initialize()});
//# sourceMappingURL=main-DrL8hjcs.js.map
